// File generated by FlutterFire CLI.
// Do not modify this file.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, TargetPlatform, kIsWeb;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI command: '
        '\n\t`flutterfire configure`\n'
        'with your app\'s web Firebase options file.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for iOS - '
          'you can reconfigure this by running the FlutterFire CLI command: '
          '\n\t`flutterfire configure`\n'
          'with your app\'s iOS and macOS Firebase options file.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macOS - '
          'you can reconfigure this by running the FlutterFire CLI command: '
          '\n\t`flutterfire configure`\n'
          'with your app\'s iOS and macOS Firebase options file.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI command: '
          '\n\t`flutterfire configure`\n'
          'with your app\'s Linux Firebase options file.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI command: '
          '\n\t`flutterfire configure`\n'
          'with your app\'s Windows Firebase options file.',
        );
      case TargetPlatform.fuchsia:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for fuchsia - '
          'you can reconfigure this by running the FlutterFire CLI command: '
          '\n\t`flutterfire configure`\n'
          'with your app\'s Fuchsia Firebase options file.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyC0hKxdEmKpJNt_g3Tg280Ewk72VoCvVOg',
    appId: '1:354991474343:android:fe836e6203b2230fcafd82',
    messagingSenderId: '354991474343',
    projectId: 'drugauthentication',
    storageBucket: 'drugauthentication.firebasestorage.app',
  );
}
